[
  {
    "model": "admin.logentry",
    "pk": 1,
    "fields": {
      "action_time": "2021-09-20T17:46:21.914Z",
      "user": 1,
      "content_type": 10,
      "object_id": "1",
      "object_repr": "(mohsen) GraphQL with React JS and Node JS -> Published",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 2,
    "fields": {
      "action_time": "2021-09-20T17:48:14.735Z",
      "user": 1,
      "content_type": 10,
      "object_id": "2",
      "object_repr": "(mohsen) Django Models -> Published",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 3,
    "fields": {
      "action_time": "2021-09-20T17:48:53.352Z",
      "user": 1,
      "content_type": 10,
      "object_id": "3",
      "object_repr": "(mohsen) Python Object Oriented -> Published",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 4,
    "fields": {
      "action_time": "2021-09-20T17:49:29.003Z",
      "user": 1,
      "content_type": 10,
      "object_id": "4",
      "object_repr": "(mohsen) Working with forms -> Published",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 5,
    "fields": {
      "action_time": "2021-09-20T17:49:50.969Z",
      "user": 1,
      "content_type": 10,
      "object_id": "5",
      "object_repr": "(mohsen) Templates -> Published",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "auth.permission",
    "pk": 1,
    "fields": {
      "name": "Can add log entry",
      "content_type": 1,
      "codename": "add_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 2,
    "fields": {
      "name": "Can change log entry",
      "content_type": 1,
      "codename": "change_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 3,
    "fields": {
      "name": "Can delete log entry",
      "content_type": 1,
      "codename": "delete_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 4,
    "fields": {
      "name": "Can view log entry",
      "content_type": 1,
      "codename": "view_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 5,
    "fields": {
      "name": "Can add permission",
      "content_type": 2,
      "codename": "add_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 6,
    "fields": {
      "name": "Can change permission",
      "content_type": 2,
      "codename": "change_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 7,
    "fields": {
      "name": "Can delete permission",
      "content_type": 2,
      "codename": "delete_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 8,
    "fields": {
      "name": "Can view permission",
      "content_type": 2,
      "codename": "view_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 9,
    "fields": {
      "name": "Can add group",
      "content_type": 3,
      "codename": "add_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 10,
    "fields": {
      "name": "Can change group",
      "content_type": 3,
      "codename": "change_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 11,
    "fields": {
      "name": "Can delete group",
      "content_type": 3,
      "codename": "delete_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 12,
    "fields": {
      "name": "Can view group",
      "content_type": 3,
      "codename": "view_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 13,
    "fields": {
      "name": "Can add user",
      "content_type": 4,
      "codename": "add_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 14,
    "fields": {
      "name": "Can change user",
      "content_type": 4,
      "codename": "change_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 15,
    "fields": {
      "name": "Can delete user",
      "content_type": 4,
      "codename": "delete_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 16,
    "fields": {
      "name": "Can view user",
      "content_type": 4,
      "codename": "view_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 17,
    "fields": {
      "name": "Can add content type",
      "content_type": 5,
      "codename": "add_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 18,
    "fields": {
      "name": "Can change content type",
      "content_type": 5,
      "codename": "change_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 19,
    "fields": {
      "name": "Can delete content type",
      "content_type": 5,
      "codename": "delete_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 20,
    "fields": {
      "name": "Can view content type",
      "content_type": 5,
      "codename": "view_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 21,
    "fields": {
      "name": "Can add session",
      "content_type": 6,
      "codename": "add_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 22,
    "fields": {
      "name": "Can change session",
      "content_type": 6,
      "codename": "change_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 23,
    "fields": {
      "name": "Can delete session",
      "content_type": 6,
      "codename": "delete_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 24,
    "fields": {
      "name": "Can view session",
      "content_type": 6,
      "codename": "view_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 25,
    "fields": {
      "name": "Can add site",
      "content_type": 7,
      "codename": "add_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 26,
    "fields": {
      "name": "Can change site",
      "content_type": 7,
      "codename": "change_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 27,
    "fields": {
      "name": "Can delete site",
      "content_type": 7,
      "codename": "delete_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 28,
    "fields": {
      "name": "Can view site",
      "content_type": 7,
      "codename": "view_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 29,
    "fields": {
      "name": "Can add tag",
      "content_type": 8,
      "codename": "add_tag"
    }
  },
  {
    "model": "auth.permission",
    "pk": 30,
    "fields": {
      "name": "Can change tag",
      "content_type": 8,
      "codename": "change_tag"
    }
  },
  {
    "model": "auth.permission",
    "pk": 31,
    "fields": {
      "name": "Can delete tag",
      "content_type": 8,
      "codename": "delete_tag"
    }
  },
  {
    "model": "auth.permission",
    "pk": 32,
    "fields": {
      "name": "Can view tag",
      "content_type": 8,
      "codename": "view_tag"
    }
  },
  {
    "model": "auth.permission",
    "pk": 33,
    "fields": {
      "name": "Can add tagged item",
      "content_type": 9,
      "codename": "add_taggeditem"
    }
  },
  {
    "model": "auth.permission",
    "pk": 34,
    "fields": {
      "name": "Can change tagged item",
      "content_type": 9,
      "codename": "change_taggeditem"
    }
  },
  {
    "model": "auth.permission",
    "pk": 35,
    "fields": {
      "name": "Can delete tagged item",
      "content_type": 9,
      "codename": "delete_taggeditem"
    }
  },
  {
    "model": "auth.permission",
    "pk": 36,
    "fields": {
      "name": "Can view tagged item",
      "content_type": 9,
      "codename": "view_taggeditem"
    }
  },
  {
    "model": "auth.permission",
    "pk": 37,
    "fields": {
      "name": "Can add post",
      "content_type": 10,
      "codename": "add_post"
    }
  },
  {
    "model": "auth.permission",
    "pk": 38,
    "fields": {
      "name": "Can change post",
      "content_type": 10,
      "codename": "change_post"
    }
  },
  {
    "model": "auth.permission",
    "pk": 39,
    "fields": {
      "name": "Can delete post",
      "content_type": 10,
      "codename": "delete_post"
    }
  },
  {
    "model": "auth.permission",
    "pk": 40,
    "fields": {
      "name": "Can view post",
      "content_type": 10,
      "codename": "view_post"
    }
  },
  {
    "model": "auth.permission",
    "pk": 41,
    "fields": {
      "name": "Can add comment",
      "content_type": 11,
      "codename": "add_comment"
    }
  },
  {
    "model": "auth.permission",
    "pk": 42,
    "fields": {
      "name": "Can change comment",
      "content_type": 11,
      "codename": "change_comment"
    }
  },
  {
    "model": "auth.permission",
    "pk": 43,
    "fields": {
      "name": "Can delete comment",
      "content_type": 11,
      "codename": "delete_comment"
    }
  },
  {
    "model": "auth.permission",
    "pk": 44,
    "fields": {
      "name": "Can view comment",
      "content_type": 11,
      "codename": "view_comment"
    }
  },
  {
    "model": "auth.user",
    "pk": 1,
    "fields": {
      "password": "pbkdf2_sha256$260000$Sa9S5OmwsDeECLYNBLfV4b$d/cpqoxXMJvYae1UkbXgzqvSnO5gvFKhvmj6alsGgww=",
      "last_login": "2021-09-20T17:37:48.373Z",
      "is_superuser": true,
      "username": "mohsen",
      "first_name": "",
      "last_name": "",
      "email": "me.mohsen@gmail.com",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2021-09-20T17:37:25.183Z",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 1,
    "fields": {
      "app_label": "admin",
      "model": "logentry"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 2,
    "fields": {
      "app_label": "auth",
      "model": "permission"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 3,
    "fields": {
      "app_label": "auth",
      "model": "group"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 4,
    "fields": {
      "app_label": "auth",
      "model": "user"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 5,
    "fields": {
      "app_label": "contenttypes",
      "model": "contenttype"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 6,
    "fields": {
      "app_label": "sessions",
      "model": "session"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 7,
    "fields": {
      "app_label": "sites",
      "model": "site"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 8,
    "fields": {
      "app_label": "taggit",
      "model": "tag"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 9,
    "fields": {
      "app_label": "taggit",
      "model": "taggeditem"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 10,
    "fields": {
      "app_label": "blog",
      "model": "post"
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 11,
    "fields": {
      "app_label": "blog",
      "model": "comment"
    }
  },
  {
    "model": "sessions.session",
    "pk": "78vyofbcar4j1k1d1l6o0pzzub5vfj64",
    "fields": {
      "session_data": ".eJxVjMEOwiAQBf-FsyGASwGP3vsNZGFBqgaS0p6M_64kPejt5c1kXszjvhW_97T6hdiFSXb6_QLGR6oD0B3rrfHY6rYugQ-FH7TzuVF6Xg_3L1Cwl5ElmwMY6dAJZXUCzCZkFPFsJCgAEgAKs072uzFoBVOaKDoXRDRWWfb-AN0gN6U:1mSNEi:J0insBizWU3jtVEdaQRRsABU604Uw_RQMG5P_pooSyU",
      "expire_date": "2021-10-04T17:37:48.410Z"
    }
  },
  {
    "model": "sites.site",
    "pk": 1,
    "fields": {
      "domain": "example.com",
      "name": "example.com"
    }
  },
  {
    "model": "taggit.tag",
    "pk": 1,
    "fields": {
      "name": "graphql",
      "slug": "graphql"
    }
  },
  {
    "model": "taggit.tag",
    "pk": 2,
    "fields": {
      "name": "javascript",
      "slug": "javascript"
    }
  },
  {
    "model": "taggit.tag",
    "pk": 3,
    "fields": {
      "name": "node-js",
      "slug": "node-js"
    }
  },
  {
    "model": "taggit.tag",
    "pk": 4,
    "fields": {
      "name": "react-js",
      "slug": "react-js"
    }
  },
  {
    "model": "taggit.tag",
    "pk": 5,
    "fields": {
      "name": "django",
      "slug": "django"
    }
  },
  {
    "model": "taggit.tag",
    "pk": 6,
    "fields": {
      "name": "python",
      "slug": "python"
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 1,
    "fields": {
      "tag": 1,
      "content_type": 10,
      "object_id": 1
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 2,
    "fields": {
      "tag": 2,
      "content_type": 10,
      "object_id": 1
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 3,
    "fields": {
      "tag": 3,
      "content_type": 10,
      "object_id": 1
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 4,
    "fields": {
      "tag": 4,
      "content_type": 10,
      "object_id": 1
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 5,
    "fields": {
      "tag": 5,
      "content_type": 10,
      "object_id": 2
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 6,
    "fields": {
      "tag": 6,
      "content_type": 10,
      "object_id": 2
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 7,
    "fields": {
      "tag": 6,
      "content_type": 10,
      "object_id": 3
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 8,
    "fields": {
      "tag": 5,
      "content_type": 10,
      "object_id": 4
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 9,
    "fields": {
      "tag": 6,
      "content_type": 10,
      "object_id": 4
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 10,
    "fields": {
      "tag": 5,
      "content_type": 10,
      "object_id": 5
    }
  },
  {
    "model": "taggit.taggeditem",
    "pk": 11,
    "fields": {
      "tag": 6,
      "content_type": 10,
      "object_id": 5
    }
  },
  {
    "model": "blog.post",
    "pk": 1,
    "fields": {
      "title": "GraphQL with React JS and Node JS",
      "slug": "graphql-with-react-js-and-node-js",
      "body": "Rest API has been the forefront of client-server architecture for as long as one can express in Unix time. However a newer and a much more simpler yet elegant approach to developing APIs for the client to communicate with in order to obtain data is GraphQL.\r\n\r\n    “GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.”\r\n\r\nThis is the official description of this unique tool that has been gaining a lot of traction over the recent years. In simpler terms, GraphQL is a language designed for client applications to fetch the exact data i.e. the type and shape of data needed from an API. It enables client applications to call a single endpoint for any type of request. Furthermore, it provides the client with the luxury to specify the exact type of data to be received from the server. Nothing more, nothing less. This predictable data structure makes it highly readable and efficient. Thus it would not be wrong to say that GraphQL is like SQL, but for the front end.",
      "create_time": "2021-09-20T17:46:21.884Z",
      "updated_time": "2021-09-20T17:46:21.884Z",
      "publish": "2021-09-20T17:45:26Z",
      "status": "p",
      "author": 1
    }
  },
  {
    "model": "blog.post",
    "pk": 2,
    "fields": {
      "title": "Django Models",
      "slug": "django-models",
      "body": "A model is the single, definitive source of information about your data. It contains the essential fields and behaviors of the data you’re storing. Generally, each model maps to a single database table.\r\n\r\nThe basics:\r\n\r\n    * Each model is a Python class that subclasses django.db.models.Model.\r\n    * Each attribute of the model represents a database field.\r\n    * With all of this, Django gives you an automatically-generated database-access API; see Making queries.",
      "create_time": "2021-09-20T17:48:14.717Z",
      "updated_time": "2021-09-20T17:48:14.717Z",
      "publish": "2021-09-20T17:47:44Z",
      "status": "p",
      "author": 1
    }
  },
  {
    "model": "blog.post",
    "pk": 3,
    "fields": {
      "title": "Python Object Oriented",
      "slug": "python-object-oriented",
      "body": "Classes provide a means of bundling data and functionality together. Creating a new class creates a new type of object, allowing new instances of that type to be made. Each class instance can have attributes attached to it for maintaining its state. Class instances can also have methods (defined by its class) for modifying its state.\r\n\r\nCompared with other programming languages, Python’s class mechanism adds classes with a minimum of new syntax and semantics. It is a mixture of the class mechanisms found in C++ and Modula-3. Python classes provide all the standard features of Object Oriented Programming: the class inheritance mechanism allows multiple base classes, a derived class can override any methods of its base class or classes, and a method can call the method of a base class with the same name. Objects can contain arbitrary amounts and kinds of data. As is true for modules, classes partake of the dynamic nature of Python: they are created at runtime, and can be modified further after creation.",
      "create_time": "2021-09-20T17:48:53.339Z",
      "updated_time": "2021-09-20T17:48:53.339Z",
      "publish": "2021-09-20T17:48:15Z",
      "status": "p",
      "author": 1
    }
  },
  {
    "model": "blog.post",
    "pk": 4,
    "fields": {
      "title": "Working with forms",
      "slug": "working-with-forms",
      "body": "Unless you’re planning to build websites and applications that do nothing but publish content, and don’t accept input from your visitors, you’re going to need to understand and use forms.\r\n\r\nDjango provides a range of tools and libraries to help you build forms to accept input from site visitors, and then process and respond to the input.",
      "create_time": "2021-09-20T17:49:28.992Z",
      "updated_time": "2021-09-20T17:49:28.992Z",
      "publish": "2021-09-20T17:48:53Z",
      "status": "p",
      "author": 1
    }
  },
  {
    "model": "blog.post",
    "pk": 5,
    "fields": {
      "title": "Templates",
      "slug": "templates",
      "body": "Being a web framework, Django needs a convenient way to generate HTML dynamically. The most common approach relies on templates. A template contains the static parts of the desired HTML output as well as some special syntax describing how dynamic content will be inserted. For a hands-on example of creating HTML pages with templates, see Tutorial 3.\r\n\r\nA Django project can be configured with one or several template engines (or even zero if you don’t use templates). Django ships built-in backends for its own template system, creatively called the Django template language (DTL), and for the popular alternative Jinja2. Backends for other template languages may be available from third-parties. You can also write your own custom backend, see Custom template backend\r\n\r\nDjango defines a standard API for loading and rendering templates regardless of the backend. Loading consists of finding the template for a given identifier and preprocessing it, usually compiling it to an in-memory representation. Rendering means interpolating the template with context data and returning the resulting string.\r\n\r\nThe Django template language is Django’s own template system. Until Django 1.8 it was the only built-in option available. It’s a good template library even though it’s fairly opinionated and sports a few idiosyncrasies. If you don’t have a pressing reason to choose another backend, you should use the DTL, especially if you’re writing a pluggable application and you intend to distribute templates. Django’s contrib apps that include templates, like django.contrib.admin, use the DTL.\r\n\r\nFor historical reasons, both the generic support for template engines and the implementation of the Django template language live in the django.template namespace.",
      "create_time": "2021-09-20T17:49:50.959Z",
      "updated_time": "2021-09-20T17:49:50.959Z",
      "publish": "2021-09-20T17:49:29Z",
      "status": "p",
      "author": 1
    }
  }
]